/home/southatoms/Escritorio/develop/personal/grappling-gear/src/App.tsx

Contenido:
// src/App.tsx
import React from 'react';
import { BrowserRouter, Routes, Route } from 'react-router-dom';
import Home from './pages/Home';
import Products from './pages/Products';
import ProductDetail from './pages/ProductDetail';
import Cart from './components/Cart';
import Checkout from './components/Checkout';
import Marketing from './pages/Marketing';
import ThemeToggle from './components/ThemeToggle';
import Header from './components/Header';

const App: React.FC = () => {
  return (
    <BrowserRouter>
      <Header />
      <ThemeToggle />
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/productos" element={<Products />} />
        <Route path="/producto/:id" element={<ProductDetail />} />
        <Route path="/carrito" element={<Cart />} />
        <Route path="/checkout" element={<Checkout />} />
        <Route path="/marketing" element={<Marketing />} />
      </Routes>
    </BrowserRouter>
  );
};

export default App;


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/main.tsx

Contenido:
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import { CartProvider } from './context/CartContext';
import './scss/main.scss';

ReactDOM.createRoot(document.getElementById('root')!).render(
  <React.StrictMode>
    <CartProvider>
      <App />
    </CartProvider>
  </React.StrictMode>
);


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/pages/Home.tsx

Contenido:
// src/pages/Home.tsx
import React from 'react';
import Hero from '../components/Hero';
import ProductGrid from '../components/ProductGrid';
import Footer from '../components/Footer';

const Home: React.FC = () => {
  return (
    <div className="home">
      <Hero />
      <ProductGrid />
      <Footer />
    </div>
  );
};

export default Home;


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/pages/Marketing.tsx

Contenido:
// src/pages/Marketing.tsx
import React from 'react';

const Marketing: React.FC = () => {
  return (
    <div className="marketing">
      <h2>Marketing Grappling Gear</h2>
      <p>
        En Grappling Gear, ofrecemos la mejor ropa para artes marciales,
        diseñada especialmente para jiu jitsu.
        Nuestra misión es proveer equipamiento de alta calidad
        que te permita rendir al máximo en tus entrenamientos y competencias.
      </p>
      <p>
        Con materiales de última tecnología y un diseño innovador,
        nuestros productos combinan estilo y rendimiento.
        Únete a la comunidad de grapplers que confían en Grappling Gear
        para destacar en cada combate.
      </p>
    </div>
  );
};

export default Marketing;


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/pages/Products.tsx

Contenido:
// src/pages/Products.tsx
import React from 'react';
import ProductList from '../components/ProductList';

const Products: React.FC = () => {
  return (
    <div className="products">
      <h2>Productos</h2>
      <ProductList />
    </div>
  );
};

export default Products;


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/pages/ProductDetail.tsx

Contenido:
// src/pages/ProductDetail.tsx
import React, { useState, useContext } from 'react';
import { useParams } from 'react-router-dom';
import { Product } from '../types/product';
import productsData from '../components/products.json';
import FullZoomImage from '../components/FullZoomImage';
import { CartContext } from '../context/CartContext';

const ProductDetail: React.FC = () => {
  const { id } = useParams<{ id: string }>();
  const products: Product[] = productsData.products;
  const product = products.find(item => item.id.toString() === id);
  const { addToCart } = useContext(CartContext);

  // Controla la imagen seleccionada de la galería
  const [selectedImage, setSelectedImage] = useState(product?.images[0] || '');

  if (!product) {
    return <div className="product-detail__notfound">Producto no encontrado</div>;
  }

  return (
    <div className="product-detail">
      <div className="product-detail__container">
        {/* Vista del producto */}
        <div className="product-detail__viewer">
          <FullZoomImage
            src={selectedImage}
            alt={product.name}
            thumbnailWidth={500}
            thumbnailHeight={400}
          />
        </div>
        {/* Información del producto */}
        <div className="product-detail__info">
          <h2 className="product-detail__title">{product.name}</h2>
          <p className="product-detail__description">{product.description}</p>
          <p className="product-detail__price">${product.price}</p>

          {/* Sección de talles y stock */}
          <div className="product-detail__extra">
            <div className="product-detail__sizes">
              <h3 className="product-detail__subtitle">Talles Disponibles</h3>
              <ul className="product-detail__size-list">
                {product.availableSizes &&
                  product.availableSizes.map((size, index) => (
                    <li key={index} className="product-detail__size-item">{size}</li>
                  ))}
              </ul>
            </div>
            <div className="product-detail__stock">
              <h3 className="product-detail__subtitle">Stock</h3>
              <p className="product-detail__stock-info">{product.stock} unidades disponibles</p>
            </div>
          </div>

          <button 
            className="btn product-detail__add-to-cart"
            onClick={() => addToCart({ product, quantity: 1 })}
          >
            Añadir al Carrito
          </button>
        </div>
      </div>
      {/* Galería de miniaturas */}
      <div className="product-detail__gallery">
        {product.images.map((img, index) => (
          <img
            key={index}
            src={img}
            alt={`${product.name} ${index + 1}`}
            className={`product-detail__thumb ${selectedImage === img ? 'selected' : ''}`}
            onClick={() => setSelectedImage(img)}
          />
        ))}
      </div>
    </div>
  );
};

export default ProductDetail;


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/components/ProductList.tsx

Contenido:
// src/components/ProductList.tsx
import React from 'react';
import ProductCard from './ProductCard';
import { Product } from '../types/product';
import productsData from './products.json';

const ProductList: React.FC = () => {
  // Si el JSON tiene la estructura { products: [...] }
  const products: Product[] = productsData.products;
  console.log(products)

  return (
    <div className="product-list">
      {products.map(product => (
        <ProductCard key={product.id} product={product} />
      ))}
    </div>
  );
};

export default ProductList;


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/components/ZoomImage.tsx

Contenido:
// src/components/ZoomImage.tsx
import React, { useState, useRef } from 'react';

interface ZoomImageProps {
  src: string;
  alt?: string;
  width?: number;   // Ancho del contenedor en px (por defecto: 300)
  height?: number;  // Alto del contenedor en px (por defecto: 300)
  zoomLevel?: number; // Factor de zoom (por defecto: 2)
}

const ZoomImage: React.FC<ZoomImageProps> = ({
  src,
  alt = '',
  width = 300,
  height = 300,
  zoomLevel = 2,
}) => {
  const containerRef = useRef<HTMLDivElement>(null);
  const [lensStyle, setLensStyle] = useState<{ display: string; left: number; top: number }>({
    display: 'none',
    left: 0,
    top: 0,
  });
  const [backgroundPosition, setBackgroundPosition] = useState('0% 0%');

  const lensSize = 100; // Tamaño de la lupa (en px)

  const handleMouseMove = (e: React.MouseEvent) => {
    const container = containerRef.current;
    if (!container) return;

    const rect = container.getBoundingClientRect();
    const x = e.clientX - rect.left;
    const y = e.clientY - rect.top;

    // Calcula la posición de la lupa centrada en el cursor
    let lensX = x - lensSize / 2;
    let lensY = y - lensSize / 2;

    // Evita que la lupa se salga del contenedor
    if (lensX < 0) lensX = 0;
    if (lensY < 0) lensY = 0;
    if (lensX > rect.width - lensSize) lensX = rect.width - lensSize;
    if (lensY > rect.height - lensSize) lensY = rect.height - lensSize;

    // Calcula la posición de fondo para la lupa (en porcentaje)
    const bgPosX = (x / rect.width) * 100;
    const bgPosY = (y / rect.height) * 100;

    setBackgroundPosition(`${bgPosX}% ${bgPosY}%`);
    setLensStyle({ display: 'block', left: lensX, top: lensY });
  };

  const handleMouseEnter = () => {
    setLensStyle(prev => ({ ...prev, display: 'block' }));
  };

  const handleMouseLeave = () => {
    setLensStyle(prev => ({ ...prev, display: 'none' }));
  };

  return (
    <div
      className="zoom-image-container"
      ref={containerRef}
      style={{
        width: `${width}px`,
        height: `${height}px`,
        position: 'relative',
        overflow: 'hidden',
      }}
      onMouseMove={handleMouseMove}
      onMouseEnter={handleMouseEnter}
      onMouseLeave={handleMouseLeave}
    >
      {/* Imagen base */}
      <img
        src={src}
        alt={alt}
        style={{
          width: '100%',
          height: '100%',
          objectFit: 'cover',
        }}
      />
      {/* Lupa o zoom */}
      <div
        className="zoom-lens"
        style={{
          display: lensStyle.display,
          position: 'absolute',
          left: lensStyle.left,
          top: lensStyle.top,
          width: `${lensSize}px`,
          height: `${lensSize}px`,
          borderRadius: '50%',
          border: '2px solid var(--accent-color)',
          backgroundImage: `url(${src})`,
          backgroundRepeat: 'no-repeat',
          backgroundSize: `${width * zoomLevel}px ${height * zoomLevel}px`,
          backgroundPosition: backgroundPosition,
          pointerEvents: 'none',
          boxShadow: '0 4px 8px rgba(0,0,0,0.3)',
        }}
      />
    </div>
  );
};

export default ZoomImage;


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/components/FullZoomImage.tsx

Contenido:
// src/components/FullZoomImage.tsx
import React, { useState, useRef, useEffect } from 'react';

interface FullZoomImageProps {
  src: string;
  alt?: string;
  thumbnailWidth?: number;  // Ancho del thumbnail (por defecto: 300px)
  thumbnailHeight?: number; // Alto del thumbnail (por defecto: 300px)
}

const FullZoomImage: React.FC<FullZoomImageProps> = ({
  src,
  alt = '',
  thumbnailWidth = 300,
  thumbnailHeight = 300,
}) => {
  const [hovered, setHovered] = useState(false);
  const [naturalSize, setNaturalSize] = useState<{ width: number; height: number }>({ width: 0, height: 0 });
  const containerRef = useRef<HTMLDivElement>(null);

  // Obtiene las dimensiones naturales de la imagen
  useEffect(() => {
    const img = new Image();
    img.src = src;
    img.onload = () => {
      setNaturalSize({ width: img.naturalWidth, height: img.naturalHeight });
    };
  }, [src]);

  return (
    <div
      className="full-zoom-image-container"
      ref={containerRef}
      style={{
        position: 'relative',
        width: `${thumbnailWidth}px`,
        height: `${thumbnailHeight}px`,
        overflow: 'visible', // Permite que el overlay se muestre fuera del contenedor
        cursor: 'zoom-in',
      }}
      onMouseEnter={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
    >
      {/* Imagen en tamaño reducido */}
      <img
        src={src}
        alt={alt}
        style={{
          width: '100%',
          height: '100%',
          objectFit: 'cover',
          display: 'block',
        }}
      />
      {/* Overlay que muestra la imagen en tamaño original */}
      {hovered && (
        <div
          className="full-zoom-overlay"
          style={{
            position: 'absolute',
            top: 0,
            left: '10%', // Se posiciona a la derecha del thumbnail
            zIndex: 999,
            border: '2px solid var(--accent-color)',
            backgroundColor: '#fff',
            boxShadow: '0 4px 8px rgba(0,0,0,0.3)',
            maxWidth: '90vw',
            maxHeight: '90vh',
            overflow: 'auto',
            marginLeft: '1rem',
          }}
        >
          <img
            src={src}
            alt={alt}
            style={{
              width: naturalSize.width,
              height: naturalSize.height,
              display: 'block',
            }}
          />
        </div>
      )}
    </div>
  );
};

export default FullZoomImage;


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/components/ThemeToggle.tsx

Contenido:
// src/components/ThemeToggle.tsx
import React, { useEffect, useState } from 'react';
import '../scss/components/_themeToggle.scss'; // Importa los estilos de SCSS

const ThemeToggle: React.FC = () => {
  const [darkMode, setDarkMode] = useState(false);

  useEffect(() => {
    console.log('darkMode:', darkMode);
    const root = document.documentElement;
    if (darkMode) {
      root.classList.add('theme-dark');
    } else {
      root.classList.remove('theme-dark');
    }
  }, [darkMode]);
  
  return (
    <button
      className="theme-toggle"
      onClick={() => setDarkMode(!darkMode)}
    >
      {/* Puedes usar emojis, íconos, o texto */}
      {darkMode ? '☀️' : '🌙'}
    </button>
  );
};

export default ThemeToggle;


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/components/Cart.tsx

Contenido:
// src/components/Cart.tsx
import React from 'react';
import { Link } from 'react-router-dom';

const Cart: React.FC = () => {
  // Datos de ejemplo (en una aplicación real estos datos vendrían de un estado global o API)
  const cartItems = [
    {
      id: 1,
      name: 'Gi Tradicional',
      price: 100,
      quantity: 1,
      image: '/pictures/ArtBoard/Artboard1Blackfront.webp'
    },
    {
      id: 2,
      name: 'No Gi Rashguard',
      price: 60,
      quantity: 2,
      image: '/pictures/ArtBoard/Artboard1WhitefrontWhite.webp'
    }
  ];

  const subtotal = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);

  return (
    <div className="cart">
      <h2>Carrito de Compras</h2>
      {cartItems.length === 0 ? (
        <p>No hay productos en el carrito.</p>
      ) : (
        <div className="cart__content">
          <div className="cart__items">
            {cartItems.map(item => (
              <div className="cart__item" key={item.id}>
                <img src={item.image} alt={item.name} className="cart__item-image" />
                <div className="cart__item-info">
                  <h3>{item.name}</h3>
                  <p>Precio: ${item.price}</p>
                  <p>Cantidad: {item.quantity}</p>
                </div>
              </div>
            ))}
          </div>
          <div className="cart__summary">
            <h3>Resumen</h3>
            <p>Subtotal: ${subtotal}</p>
            <Link to="/checkout" className="btn">Proceder al Checkout</Link>
          </div>
        </div>
      )}
    </div>
  );
};

export default Cart;


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/components/products.json

Contenido:
{
  "products": [
    {
      "id": 1,
      "name": "Gi Tradicional",
      "description": "Gi de alta calidad para jiu jitsu.",
      "price": 100,
      "images": [
        "/pictures/ArtBoard/Artboard1Blackfront.webp",
        "/pictures/ArtBoard/Artboard1BlackSide.webp"
      ],
      "availableSizes": ["S", "M", "L", "XL"],
      "stock": 15
    },
    {
      "id": 2,
      "name": "No Gi Rashguard",
      "description": "Rashguard resistente y cómodo, disponible en varios diseños.",
      "price": 60,
      "images": [
        "/pictures/ArtBoard/Artboard1WhitefrontWhite.webp",
        "/pictures/ArtBoard/Artboard1WhitesideWhite.webp"
      ],
      "availableSizes": ["S", "M", "L", "XL"],
      "stock": 20
    },
    {
      "id": 3,
      "name": "Shorts de Combate",
      "description": "Shorts ideales para combates y entrenamientos de grappling.",
      "price": 40,
      "images": [
        "/pictures/gordobrian/dorada_front.webp"
      ],
      "availableSizes": ["S", "M", "L"],
      "stock": 30
    },
    {
      "id": 4,
      "name": "Shorts de Combate",
      "description": "Shorts ideales para combates y entrenamientos de grappling.",
      "price": 40,
      "images": [
        "/pictures/kingz/draft_rash_front/DSC_6926_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6932_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6933_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6938_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6940_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6942_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6944_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6948_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6949_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6950_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6951_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6952_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6955_1620x.webp"
      ],
      "availableSizes": ["M", "L", "XL"],
      "stock": 25
    },
    {
      "id": 5,
      "name": "Shorts de Combate",
      "description": "Shorts ideales para combates y entrenamientos de grappling.",
      "price": 40,
      "images": [
        "/pictures/gordobrian/negra/blackgordonusaSSback.webp",
        "/pictures/gordobrian/negra/blackgordonusaSSfront.webp"
      ],
      "availableSizes": ["S", "M", "L"],
      "stock": 18
    },
    {
      "id": 6,
      "name": "Shorts de Combate",
      "description": "Shorts ideales para combates y entrenamientos de grappling.",
      "price": 40,
      "images": [
        "/pictures/kingz/galvao/DSC_0426_1620x.webp",
        "/pictures/kingz/galvao/DSC_0433_1620x.webp",
        "/pictures/kingz/galvao/DSC_0438_1620x.webp",
        "/pictures/kingz/galvao/DSC_0440_1620x.webp",
        "/pictures/kingz/galvao/DSC_0442_1620x.webp",
        "/pictures/kingz/galvao/DSC_0446_1620x.webp"
      ],
      "availableSizes": ["M", "L", "XL"],
      "stock": 22
    },
    {
      "id": 7,
      "name": "Shorts de Combate",
      "description": "Shorts ideales para combates y entrenamientos de grappling.",
      "price": 40,
      "images": [
        "/pictures/kingz/negrashark/DSC_6956_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6961_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6965_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6967_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6969_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6971_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6975_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6976_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6977_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6978_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6979_1620x.webp"
      ],
      "availableSizes": ["L", "XL"],
      "stock": 10
    }
  ]
}


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/components/Header.tsx

Contenido:
// src/components/Header.tsx
import React, { useContext } from 'react';
import { Link } from 'react-router-dom';
import { CartContext } from '../context/CartContext';
import '../scss/components/_header.scss';

const Header: React.FC = () => {
  const { cartItems } = useContext(CartContext);
  // Calcula el total de items sumando las cantidades
  const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);

  return (
    <header className="header">
      <div className="header__logo">
        <Link to="/">Grappling Gear</Link>
      </div>
      <nav className="header__nav">
        <Link to="/productos">Productos</Link>
        <Link to="/marketing">Marketing</Link>
        <Link to="/carrito" className="header__cart">
          Carrito
          {totalItems > 0 && (
            <span className="header__cart-badge">{totalItems}</span>
          )}
        </Link>
      </nav>
    </header>
  );
};

export default Header;


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/components/Footer.tsx

Contenido:
// Footer.tsx
import React from 'react';
import '../scss/components/_footer.scss';

const Footer: React.FC = () => {
  return (
    <footer className="footer">
      <p>© {new Date().getFullYear()} Grappling Gear. Todos los derechos reservados.</p>
    </footer>
  );
};

export default Footer;


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/components/ProductCard.tsx

Contenido:
// src/components/ProductCard.tsx
import React from 'react';
import { Link } from 'react-router-dom';
import { Product } from '../types/product';
import ZoomImage from './ZoomImage';

interface ProductCardProps {
  product: Product;
}

const ProductCard: React.FC<ProductCardProps> = ({ product }) => {
  return (
    <div className="product-card">
      <div className="product-card__image">
        {/* Ajustamos la imagen con dimensiones moderadas */}
        <ZoomImage src={product.images[0]} alt={product.name} width={280} height={160} zoomLevel={2} />
      </div>
      <div className="product-card__info">
        <h3>{product.name}</h3>
        <p>{product.description.substring(0, 70)}...</p>
        <p className="price">${product.price}</p>
        <Link to={`/producto/${product.id}`} className="btn">
          Ver Detalle
        </Link>
      </div>
    </div>
  );
};

export default ProductCard;


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/components/Hero.tsx

Contenido:
// Hero.tsx
import React from 'react';
import '../scss/components/_hero.scss';

const Hero: React.FC = () => {
  return (
    <section className="hero">
      <div className="hero__banner">
 
        <div className="hero__content">
{/*           <h1>Grappling Gear</h1>
 */}          <a href="/productos" className="btn">Explora la colección</a>
        </div>
      </div>
    </section>
  );
};

export default Hero;


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/components/ProductGrid.tsx

Contenido:
// src/components/ProductGrid.tsx
import React from 'react';
import ProductCard from './ProductCard';
import '../scss/components/_product.scss';
import productsData from './products.json';
import { Product } from '../types/product';



const ProductGrid: React.FC = () => {

  const products: Product[] = productsData.products;

  return (
    <section className="product-grid">
      <h2>Nuestra Colección</h2>
      <div className="product-grid__list">
        {products.map(product => (
          <ProductCard key={product.id} product={product} />
        ))}
      </div>
    </section>
  );
};

export default ProductGrid;


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/components/Checkout.tsx

Contenido:
// src/components/Checkout.tsx
import React, { useState } from 'react';

const Checkout: React.FC = () => {
  const [formData, setFormData] = useState({
    fullName: '',
    email: '',
    address: '',
    city: '',
    zip: '',
    country: '',
  });

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    // Aquí se implementaría la lógica de envío del pedido
    console.log('Datos de Checkout:', formData);
  };

  return (
    <div className="checkout">
      <h2>Checkout</h2>
      <form className="checkout__form" onSubmit={handleSubmit}>
        <div className="checkout__group">
          <label htmlFor="fullName">Nombre Completo</label>
          <input
            type="text"
            id="fullName"
            name="fullName"
            value={formData.fullName}
            onChange={handleChange}
            required
          />
        </div>
        <div className="checkout__group">
          <label htmlFor="email">Correo Electrónico</label>
          <input
            type="email"
            id="email"
            name="email"
            value={formData.email}
            onChange={handleChange}
            required
          />
        </div>
        <div className="checkout__group">
          <label htmlFor="address">Dirección</label>
          <input
            type="text"
            id="address"
            name="address"
            value={formData.address}
            onChange={handleChange}
            required
          />
        </div>
        <div className="checkout__group">
          <label htmlFor="city">Ciudad</label>
          <input
            type="text"
            id="city"
            name="city"
            value={formData.city}
            onChange={handleChange}
            required
          />
        </div>
        <div className="checkout__group">
          <label htmlFor="zip">Código Postal</label>
          <input
            type="text"
            id="zip"
            name="zip"
            value={formData.zip}
            onChange={handleChange}
            required
          />
        </div>
        <div className="checkout__group">
          <label htmlFor="country">País</label>
          <select
            id="country"
            name="country"
            value={formData.country}
            onChange={handleChange}
            required
          >
            <option value="">Selecciona un país</option>
            <option value="AR">Argentina</option>
            <option value="US">Estados Unidos</option>
            <option value="ES">España</option>
          </select>
        </div>
        <button type="submit" className="btn checkout__submit">Realizar Pedido</button>
      </form>
    </div>
  );
};

export default Checkout;


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/context/CartContext.tsx

Contenido:
import React, { createContext, useState, ReactNode } from 'react';
import { Product } from '../types/product';

export interface CartItem {
  product: Product;
  quantity: number;
}

interface CartContextType {
  cartItems: CartItem[];
  addToCart: (item: CartItem) => void;
  // Puedes agregar más métodos (remove, update, clear, etc.)
}

export const CartContext = createContext<CartContextType>({
  cartItems: [],
  addToCart: () => {}
});

export const CartProvider = ({ children }: { children: ReactNode }) => {
  const [cartItems, setCartItems] = useState<CartItem[]>([]);

  const addToCart = (item: CartItem) => {
    // Lógica simple: si ya existe el producto, actualiza la cantidad, de lo contrario lo agrega.
    setCartItems(prevItems => {
      const index = prevItems.findIndex(ci => ci.product.id === item.product.id);
      if (index !== -1) {
        const newItems = [...prevItems];
        newItems[index].quantity += item.quantity;
        return newItems;
      }
      return [...prevItems, item];
    });
  };

  return (
    <CartContext.Provider value={{ cartItems, addToCart }}>
      {children}
    </CartContext.Provider>
  );
};


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/scss/_variables.scss

Contenido:
// src/scss/_variables.scss
$light-colors: (
  primary: #000000,           // Texto/elementos destacados en negro
  secondary: #333333,         // Detalles secundarios
  secondary-hover: #555555,   // Hover sutil
  background: #ffffff,        // Fondo blanco
  text: #222222,              // Texto oscuro
  accent: #d4af37             // Toque dorado
);

$dark-colors: (
  primary: #ffffff,           // Texto/elementos destacados en blanco
  secondary: #d4af37,         // Acento dorado
  secondary-hover: #c99a30,   // Hover con variación del acento
  background: #121212,        // Fondo casi negro
  text: #f0f0f0,              // Texto claro
  accent: #d4af37             // Toque dorado
);

@mixin theme($colors) {
  --primary-color: #{map-get($colors, primary)};
  --secondary-color: #{map-get($colors, secondary)};
  --secondary-hover-color: #{map-get($colors, secondary-hover)};
  --background-color: #{map-get($colors, background)};
  --text-color: #{map-get($colors, text)};
  --accent-color: #{map-get($colors, accent)};
}


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/scss/_mixins.scss

Contenido:
// src/scss/_mixins.scss
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/scss/main.scss

Contenido:
@use './variables' as *;
@use './base' as *;
@use './components/_header' as *;
@use './components/_hero' as *;
@use './components/_product' as *;
@use './components/_product_detaills' as *;
@use './components/_checkout' as *;
@use './components/_cart' as *;


@use './components/_footer' as *;
@use './mixins' as *;
@use './themes' as *; // <-- que esté al final


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/scss/_themes.scss

Contenido:
// src/scss/_themes.scss
@use './variables' as vars;

html {
  @include vars.theme(vars.$light-colors);
}

html.theme-dark {
  @include vars.theme(vars.$dark-colors);
}


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/scss/_base.scss

Contenido:
// src/scss/_base.scss
* {
  box-sizing: border-box;
}

body {
  font-family: 'Roboto', sans-serif;
  margin: 0;
  padding: 0;
  background-color: var(--background-color);
  color: var(--text-color);
  line-height: 1.6;
}

a {
  color: var(--primary-color);
  text-decoration: none;
  transition: color 0.3s;
}

a:hover {
  color: var(--accent-color);
}


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/scss/components/_header.scss

Contenido:
// src/scss/components/_header.scss
.header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  padding: 1rem 2rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: var(--background-color);
  backdrop-filter: blur(10px);
  z-index: 1000;
  border-bottom: 1px solid var(--secondary-hover-color);

  &__logo a {
    font-size: 1.8rem;
    font-weight: 700;
    color: var(--primary-color);
    letter-spacing: 1px;
  }

  &__nav {
    display: flex;
    gap: 2rem;
    a {
      font-size: 1rem;
      font-weight: 500;
      position: relative;
      padding: 0.5rem 0;

      &:after {
        content: '';
        position: absolute;
        left: 0;
        bottom: 0;
        width: 0;
        height: 2px;
        background: var(--accent-color);
        transition: width 0.3s;
      }
      
      &:hover:after {
        width: 100%;
      }
    }
  }
  &__cart {
    position: relative;
    display: inline-flex;
    align-items: center;
    padding: 0.5rem;
    font-size: 1rem;
    text-decoration: none;
    color: var(--primary-color);

    &:hover {
      color: var(--accent-color);
    }
  }

  &__cart-badge {
    position: absolute;
    top: -5px;
    right: -10px;
    background-color: var(--accent-color);
    color: var(--background-color);
    border-radius: 50%;
    padding: 0.2rem 0.5rem;
    font-size: 0.75rem;
    font-weight: bold;
  }

}

/* Responsive: en móvil se puede sustituir por un menú hamburguesa */
@media (max-width: 768px) {
  .header {
    padding: 0.75rem 1.5rem;
    &__nav {
      display: none;
    }
  }
}
.header__cart-badge {
  position: absolute;
  top: -5px;
  right: -10px;
  background-color: var(--accent-color);
  color: var(--background-color);
  border-radius: 50%;
  padding: 0.2rem 0.5rem;
  font-size: 0.75rem;
  font-weight: bold;
}


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/scss/components/_hero.scss

Contenido:
/* src/scss/components/_hero.scss */
.hero {
  position: relative;
  width: 100%;
  height: 80vh; // Ajusta la altura del banner según prefieras

  /* Posiciona la imagen de fondo de modo que la parte superior se vea */
  background: url('public/pictures/MV12-2111233.jpg') center 20% / 100% auto no-repeat;
  
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--background-color);

  /* Overlay opcional para oscurecer la imagen y mejorar la legibilidad */
  &::after {
    content: "";
    position: absolute;
    inset: 0; /* top, right, bottom, left = 0 */
    background: rgba(235, 221, 221, 0.4);
    z-index: 1;
  }

  .hero__banner {
    position: relative; /* Contenedor relativo para el posicionamiento del contenido */
    width: 100%;
    height: 100%;
  }

  .hero__content {
    position: absolute;
    bottom: 2rem; /* Ubica el botón en la parte inferior del banner */
    left: 50%;
    transform: translateX(-50%);
    z-index: 2;
    text-align: center;

    .btn {
      display: inline-block;
      padding: 1rem 2rem;
      background-color: var(--primary-color);
      color: var(--background-color);
      border: 2px solid var(--primary-color);
      border-radius: 50px;
      text-transform: uppercase;
      font-weight: 600;
      transition: background-color 0.3s, color 0.3s;

      &:hover {
        background-color: var(--accent-color);
        border-color: var(--accent-color);
        color: var(--background-color);
      }
    }
  }
}

/* Ajustes responsive para pantallas pequeñas */
@media (max-width: 768px) {
  .hero {
    height: 60vh; // Menor altura en dispositivos móviles
  }
  
  .hero__content {
    bottom: 1rem;
    
    .btn {
      padding: 0.75rem 1.5rem;
    }
  }
}


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/scss/components/_footer.scss

Contenido:
// src/scss/components/_footer.scss
.footer {
  background-color: var(--primary-color);
  color: var(--background-color);
  text-align: center;
  padding: 1.5rem;
  font-size: 0.9rem;
  letter-spacing: 0.5px;
  border-top: 1px solid var(--secondary-hover-color);
}


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/scss/components/_product.scss

Contenido:
// src/scss/components/_product.scss

.product-card {
  background-color: var(--background-color);
  border: 1px solid var(--primary-color);
  border-radius: 10px;
  overflow: hidden;
  transition: transform 0.3s, box-shadow 0.3s;
  max-width: 300px; /* Ancho máximo para evitar que se vea gigante */
  margin: 1rem auto; /* Centrado y espacio alrededor */
  display: flex;
  flex-direction: column;

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
  }

  &__image {
    width: 100%;
    position: relative;
    height: 160px; /* Fijamos la altura para la imagen */
    overflow: hidden;
  }

  &__info {
    padding: 0.75rem;
    display: flex;
    flex-direction: column;
    flex-grow: 1;

    h3 {
      margin: 0;
      font-size: 1.1rem;
      color: var(--primary-color);
    }

    p {
      margin: 0.5rem 0;
      font-size: 0.85rem;
      color: var(--text-color);
    }

    .price {
      font-weight: bold;
      margin-bottom: 0.5rem;
    }

    .btn {
      display: inline-block;
      padding: 0.5rem 1rem;
      background-color: var(--secondary-color);
      color: var(--background-color);
      border-radius: 50px;
      text-transform: uppercase;
      font-size: 0.8rem;
      text-decoration: none;
      transition: background-color 0.3s;
      margin-top: auto;
      align-self: flex-start;
    }

    .btn:hover {
      background-color: var(--secondary-hover-color);
    }
  }
}


.product-grid__list {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 1rem;
  padding: 1rem;
}


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/scss/components/_themeToggle.scss

Contenido:
// src/scss/components/_themeToggle.scss
.theme-toggle {
  position: fixed;
  bottom: 2rem;
  right: 2rem;
  width: 3.5rem;
  height: 3.5rem;
  border: none;
  border-radius: 50%;
  background-color: var(--accent-color);
  color: var(--background-color);
  font-size: 1.5rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 6px 12px rgba(0,0,0,0.3);
  transition: transform 0.2s, background-color 0.3s;
  
  &:hover {
    transform: scale(1.1);
    background-color: var(--secondary-color);
  }
}


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/scss/components/_full_zoom_image.scss

Contenido:


--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/scss/components/_cart.scss

Contenido:
.cart {
    padding: 2rem;
    max-width: 1200px;
    margin: 0 auto;
  
    h2 {
      text-align: center;
      margin-bottom: 2rem;
      color: var(--primary-color);
    }
  
    &__content {
      display: flex;
      flex-wrap: wrap;
      gap: 2rem;
    }
  
    &__items {
      flex: 2;
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
    }
  
    &__item {
      display: flex;
      gap: 1rem;
      padding: 1rem;
      border: 1px solid var(--secondary-hover-color);
      border-radius: 10px;
      background-color: var(--background-color);
  
      &-image {
        width: 120px;
        height: 120px;
        object-fit: cover;
        border-radius: 5px;
      }
  
      &-info {
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: center;
  
        h3 {
          margin: 0 0 0.5rem 0;
          color: var(--primary-color);
        }
  
        p {
          margin: 0.25rem 0;
          color: var(--text-color);
        }
      }
    }
  
    &__summary {
      flex: 1;
      border: 1px solid var(--secondary-hover-color);
      border-radius: 10px;
      padding: 1.5rem;
      background-color: var(--background-color);
      height: fit-content;
  
      h3 {
        margin-top: 0;
        color: var(--primary-color);
      }
  
      p {
        margin: 1rem 0;
        font-size: 1.1rem;
        color: var(--text-color);
      }
  
      .btn {
        display: block;
        width: 100%;
        text-align: center;
        padding: 0.75rem;
        background-color: var(--secondary-color);
        color: var(--background-color);
        border-radius: 50px;
        text-transform: uppercase;
        font-weight: 600;
        transition: background-color 0.3s;
        text-decoration: none;
        margin-top: 1rem;
      }
  
      .btn:hover {
        background-color: var(--secondary-hover-color);
      }
    }
  }
  

--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/scss/components/_checkout.scss

Contenido:
.checkout {
    padding: 2rem;
    max-width: 600px;
    margin: 0 auto;
    background-color: var(--background-color);
    border: 1px solid var(--secondary-hover-color);
    border-radius: 10px;
  
    h2 {
      text-align: center;
      margin-bottom: 2rem;
      color: var(--primary-color);
    }
  
    &__form {
      display: flex;
      flex-direction: column;
      gap: 1rem;
  
      .checkout__group {
        display: flex;
        flex-direction: column;
  
        label {
          margin-bottom: 0.5rem;
          font-weight: bold;
          color: var(--primary-color);
        }
  
        input,
        select {
          padding: 0.75rem;
          border: 1px solid var(--secondary-hover-color);
          border-radius: 5px;
          font-size: 1rem;
          color: var(--text-color);
          background-color: var(--background-color);
          transition: border-color 0.3s;
        }
  
        input:focus,
        select:focus {
          outline: none;
          border-color: var(--accent-color);
        }
      }
  
      .checkout__submit {
        margin-top: 1rem;
        background-color: var(--secondary-color);
        color: var(--background-color);
        border: none;
        border-radius: 50px;
        padding: 1rem;
        text-transform: uppercase;
        font-weight: bold;
        transition: background-color 0.3s;
        cursor: pointer;
      }
  
      .checkout__submit:hover {
        background-color: var(--secondary-hover-color);
      }
    }
  }
  

--------------------------------------------------------------------------------

/home/southatoms/Escritorio/develop/personal/grappling-gear/src/scss/components/_product_detaills.scss

Contenido:
.product-detail {
  padding: 2rem;
  max-width: 1200px;
  margin: 0 auto;
  font-family: 'Roboto', sans-serif;

  &__container {
    display: flex;
    gap: 2rem;
    align-items: flex-start;
    flex-wrap: wrap;
    background: var(--background-color);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    padding: 2rem;
    border-radius: 8px;
  }

  &__viewer {
    flex: 1 1 500px;
    max-width: 500px;
  }

  &__info {
    flex: 1 1 300px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;

    & > * + * {
      margin-top: 1rem;
    }
  }

  &__title {
    font-size: 2rem;
    color: var(--primary-color);
    margin: 0;
  }

  &__description {
    font-size: 1rem;
    color: var(--text-color);
    line-height: 1.5;
  }

  &__price {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--primary-color);
  }

  &__extra {
    display: flex;
    gap: 2rem;
    margin: 1rem 0;
  }

  &__sizes,
  &__stock {
    flex: 1;
  }

  &__subtitle {
    font-size: 1.1rem;
    color: var(--primary-color);
    margin-bottom: 0.5rem;
  }

  &__size-list {
    list-style: none;
    padding: 0;
    display: flex;
    gap: 0.5rem;
    margin: 0;
  }

  &__size-item {
    padding: 0.5rem 1rem;
    border: 1px solid var(--secondary-hover-color);
    border-radius: 4px;
    font-size: 0.9rem;
    color: var(--text-color);
  }

  &__stock-info {
    font-size: 0.9rem;
    color: var(--text-color);
  }

  &__add-to-cart {
    padding: 0.75rem 1.5rem;
    background-color: var(--secondary-color);
    color: var(--background-color);
    border: none;
    border-radius: 50px;
    text-transform: uppercase;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.3s;
    align-self: start;

    &:hover {
      background-color: var(--secondary-hover-color);
    }
  }

  &__gallery {
    display: flex;
    gap: 1rem;
    margin-top: 2rem;
    justify-content: center;
  }

  &__thumb {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border: 2px solid transparent;
    border-radius: 4px;
    cursor: pointer;
    transition: border-color 0.3s;

    &.selected {
      border-color: var(--accent-color);
    }
  }

  &__notfound {
    text-align: center;
    font-size: 1.5rem;
    color: var(--text-color);
    margin: 2rem 0;
  }
}


--------------------------------------------------------------------------------

src/components/products.json

Contenido:
{
  "products": [
    {
      "id": 1,
      "name": "Gi Tradicional",
      "description": "Gi de alta calidad para jiu jitsu.",
      "price": 100,
      "images": [
        "/pictures/ArtBoard/Artboard1Blackfront.webp",
        "/pictures/ArtBoard/Artboard1BlackSide.webp"
      ],
      "availableSizes": ["S", "M", "L", "XL"],
      "stock": 15
    },
    {
      "id": 2,
      "name": "No Gi Rashguard",
      "description": "Rashguard resistente y cómodo, disponible en varios diseños.",
      "price": 60,
      "images": [
        "/pictures/ArtBoard/Artboard1WhitefrontWhite.webp",
        "/pictures/ArtBoard/Artboard1WhitesideWhite.webp"
      ],
      "availableSizes": ["S", "M", "L", "XL"],
      "stock": 20
    },
    {
      "id": 3,
      "name": "Shorts de Combate",
      "description": "Shorts ideales para combates y entrenamientos de grappling.",
      "price": 40,
      "images": [
        "/pictures/gordobrian/dorada_front.webp"
      ],
      "availableSizes": ["S", "M", "L"],
      "stock": 30
    },
    {
      "id": 4,
      "name": "Shorts de Combate",
      "description": "Shorts ideales para combates y entrenamientos de grappling.",
      "price": 40,
      "images": [
        "/pictures/kingz/draft_rash_front/DSC_6926_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6932_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6933_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6938_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6940_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6942_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6944_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6948_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6949_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6950_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6951_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6952_1620x.webp",
        "/pictures/kingz/draft_rash_front/DSC_6955_1620x.webp"
      ],
      "availableSizes": ["M", "L", "XL"],
      "stock": 25
    },
    {
      "id": 5,
      "name": "Shorts de Combate",
      "description": "Shorts ideales para combates y entrenamientos de grappling.",
      "price": 40,
      "images": [
        "/pictures/gordobrian/negra/blackgordonusaSSback.webp",
        "/pictures/gordobrian/negra/blackgordonusaSSfront.webp"
      ],
      "availableSizes": ["S", "M", "L"],
      "stock": 18
    },
    {
      "id": 6,
      "name": "Shorts de Combate",
      "description": "Shorts ideales para combates y entrenamientos de grappling.",
      "price": 40,
      "images": [
        "/pictures/kingz/galvao/DSC_0426_1620x.webp",
        "/pictures/kingz/galvao/DSC_0433_1620x.webp",
        "/pictures/kingz/galvao/DSC_0438_1620x.webp",
        "/pictures/kingz/galvao/DSC_0440_1620x.webp",
        "/pictures/kingz/galvao/DSC_0442_1620x.webp",
        "/pictures/kingz/galvao/DSC_0446_1620x.webp"
      ],
      "availableSizes": ["M", "L", "XL"],
      "stock": 22
    },
    {
      "id": 7,
      "name": "Shorts de Combate",
      "description": "Shorts ideales para combates y entrenamientos de grappling.",
      "price": 40,
      "images": [
        "/pictures/kingz/negrashark/DSC_6956_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6961_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6965_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6967_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6969_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6971_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6975_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6976_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6977_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6978_1620x.webp",
        "/pictures/kingz/negrashark/DSC_6979_1620x.webp"
      ],
      "availableSizes": ["L", "XL"],
      "stock": 10
    }
  ]
}


--------------------------------------------------------------------------------

